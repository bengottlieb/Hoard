// Generated by Apple Swift version 3.1 (swiftlang-802.0.48 clang-802.0.38)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if defined(__has_include) && __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if defined(__has_attribute) && __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if defined(__has_attribute) && __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
# if defined(__has_feature) && __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if defined(__has_feature) && __has_feature(modules)
@import Foundation;
@import CloudKit;
@import ObjectiveC;
@import Dispatch;
@import AppKit;
@import CoreGraphics;
@import CoreData;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"

@interface NSBundle (SWIFT_EXTENSION(Gulliver))
@property (nonatomic, readonly, copy) NSString * _Nonnull version;
@property (nonatomic, readonly, copy) NSString * _Nonnull buildNumber;
@end

@class CKDatabase;
@class CKQueryOperation;
@class NSMutableArray;

@interface CKRecord (SWIFT_EXTENSION(Gulliver))
+ (void)removeAllRecordsWithType:(NSString * _Nonnull)type inDatabase:(CKDatabase * _Nonnull)database completion:(void (^ _Nonnull)(NSInteger, NSError * _Nullable))completion;
+ (void)removeRecordsFor:(CKQueryOperation * _Nonnull)operation inDatabase:(CKDatabase * _Nonnull)database includingFoundIDs:(NSMutableArray * _Nonnull)recordIDs completion:(void (^ _Nonnull)(NSInteger, NSError * _Nullable))completion;
@end


@interface NSFileManager (SWIFT_EXTENSION(Gulliver))
- (BOOL)fileExistsAt:(NSURL * _Nullable)url SWIFT_WARN_UNUSED_RESULT;
- (BOOL)directoryExistsAt:(NSURL * _Nonnull)url SWIFT_WARN_UNUSED_RESULT;
+ (NSURL * _Nullable)userDirectoryWithType:(NSSearchPathDirectory)type SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSURL * _Nonnull documentsDirectoryURL;)
+ (NSURL * _Nonnull)documentsDirectoryURL SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSURL * _Nonnull libraryDirectoryURL;)
+ (NSURL * _Nonnull)libraryDirectoryURL SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSURL * _Nonnull applicationSupportDirectoryURL;)
+ (NSURL * _Nonnull)applicationSupportDirectoryURL SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSURL * _Nonnull cachesDirectoryURL;)
+ (NSURL * _Nonnull)cachesDirectoryURL SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSURL * _Nonnull tempDirectoryURL;)
+ (NSURL * _Nonnull)tempDirectoryURL SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)randomFileNameWithExtension:(NSString * _Nonnull)ext SWIFT_WARN_UNUSED_RESULT;
+ (NSURL * _Nonnull)randomFileURLWithExtension:(NSString * _Nonnull)extension SWIFT_WARN_UNUSED_RESULT;
@end

@class NSManagedObjectModel;
@class NSPersistentStoreCoordinator;
@class NSManagedObjectContext;
@class NSNotification;
@class NSEntityDescription;

SWIFT_CLASS("_TtC8Gulliver18ManagedObjectStore")
@interface ManagedObjectStore : NSObject
@property (nonatomic, readonly, strong) NSManagedObjectModel * _Nonnull model;
@property (nonatomic, readonly, strong) NSPersistentStoreCoordinator * _Nonnull persistentStoreCoordinator;
@property (nonatomic, strong) NSManagedObjectContext * _Null_unspecified mainThreadContext;
@property (nonatomic, readonly, copy) NSURL * _Nonnull storeURL;
@property (nonatomic, readonly, strong) NSManagedObjectContext * _Nonnull privateContext;
@property (nonatomic, copy) NSString * _Nonnull databaseSuffix;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSURL * _Nullable modelURL;)
+ (NSURL * _Nullable)modelURL SWIFT_WARN_UNUSED_RESULT;
+ (void)setModelURL:(NSURL * _Nullable)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nullable filename;)
+ (NSString * _Nullable)filename SWIFT_WARN_UNUSED_RESULT;
+ (void)setFilename:(NSString * _Nullable)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull groupIdentifier;)
+ (NSString * _Nonnull)groupIdentifier SWIFT_WARN_UNUSED_RESULT;
+ (void)setGroupIdentifier:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull defaultDatabaseSuffix;)
+ (NSString * _Nonnull)defaultDatabaseSuffix SWIFT_WARN_UNUSED_RESULT;
+ (void)setDefaultDatabaseSuffix:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nullable modelName;)
+ (NSString * _Nullable)modelName SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull persistentStoreOptions;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSURL * _Nullable generatedModelURL;)
+ (NSURL * _Nullable)generatedModelURL SWIFT_WARN_UNUSED_RESULT;
+ (void)preload;
- (void)didCreateDatabase;
+ (void)setAppGroupWithIdentifier:(NSString * _Nonnull)identifier filename:(NSString * _Nullable)filename;
+ (NSString * _Nonnull)generateDatabaseNameFrom:(NSString * _Nullable)base suffix:(NSString * _Nonnull)suffix SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithModelURL:(NSURL * _Nullable)modelURL filename:(NSString * _Nullable)filename options:(NSDictionary<NSString *, id> * _Nonnull)opts OBJC_DESIGNATED_INITIALIZER;
- (void)setupMainThreadContext;
- (void)switchDatabaseNameTo:(NSString * _Nonnull)newName;
- (void)updateForDatabaseSuffixChange;
- (void)setup;
@property (nonatomic, readonly, strong) dispatch_group_t _Nonnull saveDispatchGroup;
- (void)contextDidSaveWithNote:(NSNotification * _Nonnull)note;
- (NSManagedObjectContext * _Nonnull)createWorkerContextWithName:(NSString * _Nonnull)name SWIFT_WARN_UNUSED_RESULT;
- (void)importWith:(void (^ _Nonnull)(NSManagedObjectContext * _Nonnull))block;
- (void)importAndWaitWith:(void (^ _Nonnull)(NSManagedObjectContext * _Nonnull))block;
- (id _Nullable)objectForKeyedSubscript:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (void)setObject:(id _Nullable)newValue forKeyedSubscript:(NSString * _Nonnull)key;
- (void)deleteAllDataWithEntitiesToClear:(NSArray<NSEntityDescription *> * _Nullable)entitiesToClear completion:(void (^ _Nonnull)(void))completion;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


@interface ManagedObjectStore (SWIFT_EXTENSION(Gulliver))
- (void)registerContextWithCtx:(NSManagedObjectContext * _Nonnull)ctx;
- (void)unregisterContextWithCtx:(NSManagedObjectContext * _Nonnull)ctx;
- (void)updatedActiveContexts;
@end


@interface NSAttributedString (SWIFT_EXTENSION(Gulliver))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSDictionary<NSString *, id> * _Nonnull defaultAttributes;)
+ (NSDictionary<NSString *, id> * _Nonnull)defaultAttributes SWIFT_WARN_UNUSED_RESULT;
+ (void)setDefaultAttributes:(NSDictionary<NSString *, id> * _Nonnull)newValue;
- (NSAttributedString * _Nonnull)byAppendingWithString:(NSAttributedString * _Nonnull)string SWIFT_WARN_UNUSED_RESULT;
- (NSAttributedString * _Nonnull)byAppendingWithString:(NSString * _Nonnull)string attributes:(NSDictionary<NSString *, id> * _Nullable)attributes SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nullable trailingAttributes;
@end


@interface NSColor (SWIFT_EXTENSION(Gulliver))
- (nullable instancetype)initWithHex:(NSString * _Nonnull)hex;
@property (nonatomic, readonly, copy) NSString * _Nonnull hex;
@end


@interface NSData (SWIFT_EXTENSION(Gulliver))
@end


@interface NSEvent (SWIFT_EXTENSION(Gulliver))
- (BOOL)isModifierKeyDown:(NSEventModifierFlags)key SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) BOOL isShiftKeyDown;
@property (nonatomic, readonly) BOOL isOptionKeyDown;
@property (nonatomic, readonly) BOOL isCommandKeyDown;
@property (nonatomic, readonly) BOOL isControlKeyDown;
@end


@interface NSImage (SWIFT_EXTENSION(Gulliver))
@property (nonatomic, readonly, copy) NSString * _Nonnull md5;
- (NSImage * _Nonnull)tintedImageWithTint:(NSColor * _Nonnull)tint SWIFT_WARN_UNUSED_RESULT;
- (NSImage * _Nullable)scaledImageWithNewSize:(CGSize)newSize SWIFT_WARN_UNUSED_RESULT;
@end

@class ThreadsafeToken;

@interface NSManagedObject (SWIFT_EXTENSION(Gulliver))
@property (nonatomic, readonly, strong) ThreadsafeToken * _Nonnull threadsafeToken;
@end


@interface NSManagedObject (SWIFT_EXTENSION(Gulliver))
- (void)loadWithDictionary:(NSDictionary<NSString *, id> * _Nonnull)dict;
- (NSManagedObject * _Nullable)importRelationshipWithName:(NSString * _Nonnull)name fromDictionary:(NSDictionary<NSString *, id> * _Nonnull)dict SWIFT_WARN_UNUSED_RESULT;
- (NSManagedObject * _Nullable)findExistingRelationshipWithEntityName:(NSString * _Nonnull)entityName forDictionary:(NSDictionary<NSString *, id> * _Nonnull)dict SWIFT_WARN_UNUSED_RESULT;
- (NSManagedObject * _Nullable)addRelationshipWithName:(NSString * _Nonnull)name fromDictionary:(NSDictionary<NSString *, id> * _Nonnull)dict SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)dictionaryKeyToAttributeNameWithKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (NSDate * _Nullable)dictionaryStringToDateWithString:(NSString * _Nonnull)string SWIFT_WARN_UNUSED_RESULT;
@end


@interface NSManagedObject (SWIFT_EXTENSION(Gulliver))
- (id _Nullable)objectForKeyedSubscript:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (void)setObject:(id _Nullable)newValue forKeyedSubscript:(NSString * _Nonnull)key;
@property (nonatomic, readonly, strong) NSManagedObjectContext * _Nullable moc;
- (NSManagedObject * _Nullable)instantiateIn:(NSManagedObjectContext * _Nonnull)moc SWIFT_WARN_UNUSED_RESULT;
- (void)logObject;
- (void)refreshInContextWithMerge:(BOOL)merge;
- (void)saveWithWait:(BOOL)wait toDisk:(BOOL)toDisk completion:(void (^ _Nullable)(NSError * _Nullable))completion;
- (void)deleteFromContextWithAndSave:(BOOL)andSave;
- (BOOL)hasPropertyWithKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
@end


@interface NSManagedObject (SWIFT_EXTENSION(Gulliver))
@property (nonatomic, readonly) NSNotificationName _Nonnull didInsertNotificationName;
@property (nonatomic, readonly) NSNotificationName _Nonnull didSaveAfterInsertionNotificationName;
@property (nonatomic, readonly) NSNotificationName _Nonnull willDeleteNotificationName;
@property (nonatomic, readonly) NSNotificationName _Nonnull didDeleteNotificationName;
@end


@interface NSManagedObjectContext (SWIFT_EXTENSION(Gulliver))
@end

@class NSPredicate;
@class NSSortDescriptor;

@interface NSManagedObjectContext (SWIFT_EXTENSION(Gulliver))
- (NSManagedObject * _Nonnull)insertEntityWithNamed:(NSString * _Nonnull)name SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)countOf:(NSString * _Nonnull)entityName matching:(NSPredicate * _Nullable)predicate SWIFT_WARN_UNUSED_RESULT;
- (void)saveContextWithWait:(BOOL)wait toDisk:(BOOL)toDisk suppressInsertedNotifications:(BOOL)suppressInsertedNotifications completion:(void (^ _Nullable)(NSError * _Nullable))completion;
- (void)refreshAllFaults;
- (NSFetchRequest<id <NSFetchRequestResult>> * _Nonnull)generateFetchRequestFor:(NSString * _Nonnull)name SWIFT_WARN_UNUSED_RESULT;
- (NSManagedObject * _Nullable)insertObjectWithNamed:(NSString * _Nonnull)entityName SWIFT_WARN_UNUSED_RESULT;
- (NSArray<NSManagedObject *> * _Nonnull)fetchAllWithNamed:(NSString * _Nonnull)entityName matching:(NSPredicate * _Nullable)predicate sortedBy:(NSArray<NSSortDescriptor *> * _Nonnull)sortedBy SWIFT_WARN_UNUSED_RESULT;
- (NSManagedObject * _Nullable)fetchAnyWithNamed:(NSString * _Nonnull)entityName matching:(NSPredicate * _Nullable)predicate sortedBy:(NSArray<NSSortDescriptor *> * _Nonnull)sortBy SWIFT_WARN_UNUSED_RESULT;
@end


@interface NSMutableAttributedString (SWIFT_EXTENSION(Gulliver))
- (void)appendWithString:(NSString * _Nonnull)string attributes:(NSDictionary<NSString *, id> * _Nullable)attributes;
- (void)assignWithAttributes:(NSDictionary<NSString *, id> * _Nonnull)attr toUniqueSubstring:(NSString * _Nonnull)text;
@end


@interface NSMutableAttributedString (SWIFT_EXTENSION(Gulliver))
- (nonnull instancetype)initWithComponents:(NSArray * _Nonnull)components;
@end


@interface NSObject (SWIFT_EXTENSION(Gulliver))
@end


@interface NSObject (SWIFT_EXTENSION(Gulliver))
@end


@interface NSObject (SWIFT_EXTENSION(Gulliver))
@end


@interface NSObject (SWIFT_EXTENSION(Gulliver))
- (void)addAsObserverForString:(NSString * _Nonnull)name selector:(SEL _Nonnull)sel object:(id _Nullable)object;
- (void)removeAsObserverForString:(NSString * _Nonnull)notificationName;
- (void)removeAsObserverFor:(NSNotificationName _Nullable)notificationName;
@end


@interface NSObject (SWIFT_EXTENSION(Gulliver))
@property (nonatomic, readonly, strong) NSBundle * _Nullable bundle;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) NSBundle * _Nullable bundle;)
+ (NSBundle * _Nullable)bundle SWIFT_WARN_UNUSED_RESULT;
@end


@interface NSView (SWIFT_EXTENSION(Gulliver))
- (void)setupShadowWithColor:(NSColor * _Nonnull)color radius:(CGFloat)radius offset:(CGSize)offset opacity:(float)opacity;
@end


@interface NSView (SWIFT_EXTENSION(Gulliver))
@property (nonatomic, strong) NSColor * _Nullable backgroundColor;
@end

@class NSLayoutConstraint;

@interface NSView (SWIFT_EXTENSION(Gulliver))
- (NSLayoutConstraint * _Nullable)existingConstraintFor:(NSLayoutAttribute)attr SWIFT_WARN_UNUSED_RESULT;
- (void)constrainJustifiedIn:(NSView * _Nonnull)parent priority:(NSLayoutPriority)priority;
- (void)centerWithHorizontally:(BOOL)horizontally vertically:(BOOL)vertically priority:(NSLayoutPriority)priority;
- (void)constrainDimension:(NSLayoutAttribute)attribute constant:(CGFloat)constant priority:(NSLayoutPriority)priority;
- (void)removeAllConstraints;
@end


SWIFT_CLASS("_TtC8Gulliver24NetworkActivityIndicator")
@interface NetworkActivityIndicator : NSObject
+ (void)increment;
+ (void)decrement;
- (void)hideIndicator;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL isVisible;)
+ (BOOL)isVisible SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface NSOperationQueue (SWIFT_EXTENSION(Gulliver))
- (nonnull instancetype)initWithSerial:(BOOL)serial;
- (void)addOperationAndWaitWithBlock:(void (^ _Nonnull)(void))block;
@end


@interface NSTask (SWIFT_EXTENSION(Gulliver))
- (nonnull instancetype)initWithPath:(NSString * _Nonnull)path arguments:(NSArray<NSString *> * _Nonnull)args;
- (NSString * _Nullable)stringValueWithTimeout:(NSTimeInterval)timeout SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)errorValueWithTimeout:(NSTimeInterval)timeout SWIFT_WARN_UNUSED_RESULT;
- (int32_t)runWithTimeout:(NSTimeInterval)timeout SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC8Gulliver16SA_ManagedObject")
@interface SA_ManagedObject : NSManagedObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull entityName;)
+ (NSString * _Nonnull)entityName SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSNotificationName _Nonnull didInsertNotificationName;)
+ (NSNotificationName _Nonnull)didInsertNotificationName SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSNotificationName _Nonnull willDeleteNotificationName;)
+ (NSNotificationName _Nonnull)willDeleteNotificationName SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSNotificationName _Nonnull didDeleteNotificationName;)
+ (NSNotificationName _Nonnull)didDeleteNotificationName SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSNotificationName _Nonnull didSaveAfterInsertionNotificationName;)
+ (NSNotificationName _Nonnull)didSaveAfterInsertionNotificationName SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface NSTimer (SWIFT_EXTENSION(Gulliver))
+ (NSTimer * _Nonnull)scheduledOnMainThreadWithInterval:(NSTimeInterval)interval target:(id _Nonnull)target selector:(SEL _Nonnull)selector userInfo:(id _Nullable)userInfo repeats:(BOOL)repeats SWIFT_WARN_UNUSED_RESULT;
@end


@interface NSUserDefaults (SWIFT_EXTENSION(Gulliver))
+ (void)setCurrentDefaultsWithGroup:(NSString * _Nonnull)group;
+ (NSUserDefaults * _Nonnull)defaults SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)hasValueForKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
@end


@interface NSUserDefaults (SWIFT_EXTENSION(Gulliver))
- (BOOL)hasValueForKeyWithKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
- (void)removeValueForKey:(NSString * _Nonnull)key;
@end

#pragma clang diagnostic pop
