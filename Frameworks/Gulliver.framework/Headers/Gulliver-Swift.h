// Generated by Apple Swift version 3.0.2 (swiftlang-800.0.63 clang-800.0.42.1)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if defined(__has_include) && __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if defined(__has_attribute) && __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
# if defined(__has_feature) && __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if defined(__has_feature) && __has_feature(modules)
@import UIKit;
@import Foundation;
@import CloudKit;
@import ObjectiveC;
@import CoreGraphics;
@import CoreData;
@import QuartzCore;
@import MessageUI;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
@class UILabel;
@class NSAttributedString;
@class NSLayoutConstraint;
@class NSCoder;

SWIFT_CLASS("_TtC8Gulliver23AttributedTableViewCell")
@interface AttributedTableViewCell : UITableViewCell
@property (nonatomic, strong) UILabel * _Null_unspecified attributedLabel;
@property (nonatomic, strong) NSAttributedString * _Nullable attributedText;
@property (nonatomic, copy) NSArray<NSLayoutConstraint *> * _Nonnull labelConstraints;
+ (AttributedTableViewCell * _Nonnull)attributedCellWithReuseIdentifier:(NSString * _Nullable)reuseIdentifier insets:(UIEdgeInsets)insets;
- (void)awakeFromNib;
@property (nonatomic) UIEdgeInsets edgeInsets;
- (void)setupConstraints;
- (void)didMoveToSuperview;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class UITraitCollection;
@class UIImage;

@interface NSBundle (SWIFT_EXTENSION(Gulliver))
- (UIImage * _Nullable)imageWithNamed:(NSString * _Nonnull)named compatibleWith:(UITraitCollection * _Nullable)compatibleWith;
@end


@interface NSBundle (SWIFT_EXTENSION(Gulliver))
@property (nonatomic, readonly, copy) NSString * _Nonnull version;
@property (nonatomic, readonly, copy) NSString * _Nonnull buildNumber;
@end

@class CKDatabase;
@class CKQueryOperation;
@class NSMutableArray;

@interface CKRecord (SWIFT_EXTENSION(Gulliver))
+ (void)removeAllRecordsWithType:(NSString * _Nonnull)type inDatabase:(CKDatabase * _Nonnull)database completion:(void (^ _Nonnull)(NSInteger, NSError * _Nullable))completion;
+ (void)removeRecordsFor:(CKQueryOperation * _Nonnull)operation inDatabase:(CKDatabase * _Nonnull)database includingFoundIDs:(NSMutableArray * _Nonnull)recordIDs completion:(void (^ _Nonnull)(NSInteger, NSError * _Nullable))completion;
@end


SWIFT_CLASS("_TtC8Gulliver23ContainerViewController")
@interface ContainerViewController : UIViewController
@property (nonatomic, strong) UIViewController * _Nullable currentController;
- (nonnull instancetype)initWithInitialViewController:(UIViewController * _Nonnull)initialViewController;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class UITableView;

SWIFT_CLASS("_TtC8Gulliver15ErrorLogDisplay")
@interface ErrorLogDisplay : UITableViewController
+ (UIViewController * _Nonnull)presentIn:(UIViewController * _Nonnull)parent;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
@property (nonatomic, readonly, copy) NSString * _Nonnull mailBodyText;
- (void)mail;
- (void)clear;
- (void)done;
- (void)reloadOnMain;
- (void)reload;
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (nonnull instancetype)initWithStyle:(UITableViewStyle)style OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


@interface NSFileManager (SWIFT_EXTENSION(Gulliver))
- (BOOL)fileExistsAt:(NSURL * _Nullable)url;
- (BOOL)directoryExistsAt:(NSURL * _Nonnull)url;
+ (NSURL * _Nullable)userDirectoryWithType:(NSSearchPathDirectory)type;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSURL * _Nonnull documentsDirectoryURL;)
+ (NSURL * _Nonnull)documentsDirectoryURL;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSURL * _Nonnull libraryDirectoryURL;)
+ (NSURL * _Nonnull)libraryDirectoryURL;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSURL * _Nonnull applicationSupportDirectoryURL;)
+ (NSURL * _Nonnull)applicationSupportDirectoryURL;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSURL * _Nonnull cachesDirectoryURL;)
+ (NSURL * _Nonnull)cachesDirectoryURL;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSURL * _Nonnull tempDirectoryURL;)
+ (NSURL * _Nonnull)tempDirectoryURL;
+ (NSString * _Nonnull)randomFileNameWithExtension:(NSString * _Nonnull)ext;
+ (NSURL * _Nonnull)randomFileURLWithExtension:(NSString * _Nonnull)extension;
@end


SWIFT_CLASS("_TtC8Gulliver28HeightChangedCallbackWrapper")
@interface HeightChangedCallbackWrapper : NSObject
@property (nonatomic, readonly, copy) void (^ _Nonnull block)(CGFloat);
- (nonnull instancetype)init:(void (^ _Nonnull)(CGFloat))blk OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end

@class NSManagedObjectModel;
@class NSPersistentStoreCoordinator;
@class NSManagedObjectContext;
@class OS_dispatch_group;
@class NSNotification;
@class NSEntityDescription;

SWIFT_CLASS("_TtC8Gulliver18ManagedObjectStore")
@interface ManagedObjectStore : NSObject
@property (nonatomic, readonly, strong) NSManagedObjectModel * _Nonnull model;
@property (nonatomic, readonly, strong) NSPersistentStoreCoordinator * _Nonnull persistentStoreCoordinator;
@property (nonatomic, strong) NSManagedObjectContext * _Null_unspecified mainThreadContext;
@property (nonatomic, readonly, copy) NSURL * _Nonnull storeURL;
@property (nonatomic, readonly, strong) NSManagedObjectContext * _Nonnull privateContext;
@property (nonatomic, copy) NSString * _Nonnull databaseSuffix;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSURL * _Nullable modelURL;)
+ (NSURL * _Nullable)modelURL;
+ (void)setModelURL:(NSURL * _Nullable)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nullable filename;)
+ (NSString * _Nullable)filename;
+ (void)setFilename:(NSString * _Nullable)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull groupIdentifier;)
+ (NSString * _Nonnull)groupIdentifier;
+ (void)setGroupIdentifier:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull defaultDatabaseSuffix;)
+ (NSString * _Nonnull)defaultDatabaseSuffix;
+ (void)setDefaultDatabaseSuffix:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nullable modelName;)
+ (NSString * _Nullable)modelName;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull persistentStoreOptions;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSURL * _Nullable generatedModelURL;)
+ (NSURL * _Nullable)generatedModelURL;
+ (void)preload;
- (void)didCreateDatabase;
+ (void)setAppGroupWithIdentifier:(NSString * _Nonnull)identifier filename:(NSString * _Nullable)filename;
+ (NSString * _Nonnull)generateDatabaseNameFrom:(NSString * _Nullable)base suffix:(NSString * _Nonnull)suffix;
- (nonnull instancetype)initWithModelURL:(NSURL * _Nullable)modelURL filename:(NSString * _Nullable)filename options:(NSDictionary<NSString *, id> * _Nonnull)opts OBJC_DESIGNATED_INITIALIZER;
- (void)setupMainThreadContext;
- (void)updateForDatabaseSuffixChange;
- (void)setup;
@property (nonatomic, readonly, strong) OS_dispatch_group * _Nonnull saveDispatchGroup;
- (void)contextDidSaveWithNote:(NSNotification * _Nonnull)note;
- (NSManagedObjectContext * _Nonnull)createWorkerContextWithName:(NSString * _Nonnull)name;
- (void)importWith:(void (^ _Nonnull)(NSManagedObjectContext * _Nonnull))block;
- (void)importAndWaitWith:(void (^ _Nonnull)(NSManagedObjectContext * _Nonnull))block;
- (id _Nullable)objectForKeyedSubscript:(NSString * _Nonnull)key;
- (void)setObject:(id _Nullable)newValue forKeyedSubscript:(NSString * _Nonnull)key;
- (void)deleteAllDataWithEntitiesToClear:(NSArray<NSEntityDescription *> * _Nullable)entitiesToClear completion:(void (^ _Nonnull)(void))completion;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


@interface ManagedObjectStore (SWIFT_EXTENSION(Gulliver))
- (void)registerContextWithCtx:(NSManagedObjectContext * _Nonnull)ctx;
- (void)unregisterContextWithCtx:(NSManagedObjectContext * _Nonnull)ctx;
- (void)updatedActiveContexts;
@end


@interface NSAttributedString (SWIFT_EXTENSION(Gulliver))
@property (nonatomic, readonly) CGFloat width;
- (CGFloat)heightWithConstrainedToWidth:(CGFloat)constrainedToWidth;
@end


@interface NSAttributedString (SWIFT_EXTENSION(Gulliver))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSDictionary<NSString *, id> * _Nonnull defaultAttributes;)
+ (NSDictionary<NSString *, id> * _Nonnull)defaultAttributes;
+ (void)setDefaultAttributes:(NSDictionary<NSString *, id> * _Nonnull)newValue;
- (NSAttributedString * _Nonnull)byAppendingWithString:(NSAttributedString * _Nonnull)string;
- (NSAttributedString * _Nonnull)byAppendingWithString:(NSString * _Nonnull)string attributes:(NSDictionary<NSString *, id> * _Nullable)attributes;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nullable trailingAttributes;
@end


@interface NSData (SWIFT_EXTENSION(Gulliver))
@end


@interface NSError (SWIFT_EXTENSION(Gulliver))
@property (nonatomic, readonly) BOOL isTimeout;
@property (nonatomic, readonly) BOOL isNoConnection;
@property (nonatomic, readonly, copy) NSArray<NSError *> * _Nonnull underlyingErrors;
@end

@class ThreadsafeToken;

@interface NSManagedObject (SWIFT_EXTENSION(Gulliver))
@property (nonatomic, readonly, strong) ThreadsafeToken * _Nonnull threadsafeToken;
@end


@interface NSManagedObject (SWIFT_EXTENSION(Gulliver))
- (void)loadWithDictionary:(NSDictionary<NSString *, id> * _Nonnull)dict;
- (NSManagedObject * _Nullable)importRelationshipWithName:(NSString * _Nonnull)name fromDictionary:(NSDictionary<NSString *, id> * _Nonnull)dict;
- (NSManagedObject * _Nullable)findExistingRelationshipWithEntityName:(NSString * _Nonnull)entityName forDictionary:(NSDictionary<NSString *, id> * _Nonnull)dict;
- (NSManagedObject * _Nullable)addRelationshipWithName:(NSString * _Nonnull)name fromDictionary:(NSDictionary<NSString *, id> * _Nonnull)dict;
- (NSString * _Nullable)dictionaryKeyToAttributeNameWithKey:(NSString * _Nonnull)key;
- (NSDate * _Nullable)dictionaryStringToDateWithString:(NSString * _Nonnull)string;
@end


@interface NSManagedObject (SWIFT_EXTENSION(Gulliver))
@property (nonatomic, readonly) NSNotificationName _Nonnull didInsertNotificationName;
@property (nonatomic, readonly) NSNotificationName _Nonnull didSaveAfterInsertionNotificationName;
@property (nonatomic, readonly) NSNotificationName _Nonnull willDeleteNotificationName;
@property (nonatomic, readonly) NSNotificationName _Nonnull didDeleteNotificationName;
@end


@interface NSManagedObject (SWIFT_EXTENSION(Gulliver))
- (id _Nullable)objectForKeyedSubscript:(NSString * _Nonnull)key;
- (void)setObject:(id _Nullable)newValue forKeyedSubscript:(NSString * _Nonnull)key;
@property (nonatomic, readonly, strong) NSManagedObjectContext * _Nullable moc;
- (NSManagedObject * _Nullable)instantiateIn:(NSManagedObjectContext * _Nonnull)moc;
- (void)logObject;
- (void)refreshInContextWithMerge:(BOOL)merge;
- (void)saveWithWait:(BOOL)wait toDisk:(BOOL)toDisk completion:(void (^ _Nullable)(NSError * _Nullable))completion;
- (void)deleteFromContextWithAndSave:(BOOL)andSave;
- (BOOL)hasPropertyWithKey:(NSString * _Nonnull)key;
@end


@interface NSManagedObjectContext (SWIFT_EXTENSION(Gulliver))
@end

@class NSPredicate;
@class NSSortDescriptor;

@interface NSManagedObjectContext (SWIFT_EXTENSION(Gulliver))
- (NSManagedObject * _Nonnull)insertEntityWithNamed:(NSString * _Nonnull)name;
- (NSInteger)countOf:(NSString * _Nonnull)entityName matching:(NSPredicate * _Nullable)predicate;
- (void)saveContextWithWait:(BOOL)wait toDisk:(BOOL)toDisk suppressInsertedNotifications:(BOOL)suppressInsertedNotifications completion:(void (^ _Nullable)(NSError * _Nullable))completion;
- (void)refreshAllFaults;
- (NSFetchRequest<id <NSFetchRequestResult>> * _Nonnull)generateFetchRequestFor:(NSString * _Nonnull)name;
- (NSManagedObject * _Nullable)insertObjectWithNamed:(NSString * _Nonnull)entityName;
- (NSArray<NSManagedObject *> * _Nonnull)fetchAllWithNamed:(NSString * _Nonnull)entityName matching:(NSPredicate * _Nullable)predicate sortedBy:(NSArray<NSSortDescriptor *> * _Nonnull)sortedBy;
- (NSManagedObject * _Nullable)fetchAnyWithNamed:(NSString * _Nonnull)entityName matching:(NSPredicate * _Nullable)predicate sortedBy:(NSArray<NSSortDescriptor *> * _Nonnull)sortBy;
@end


@interface NSMutableAttributedString (SWIFT_EXTENSION(Gulliver))
- (void)addLineBreakOfHeightWithHeight:(CGFloat)height;
@end


@interface NSMutableAttributedString (SWIFT_EXTENSION(Gulliver))
- (void)appendWithString:(NSString * _Nonnull)string attributes:(NSDictionary<NSString *, id> * _Nullable)attributes;
- (void)assignWithAttributes:(NSDictionary<NSString *, id> * _Nonnull)attr toUniqueSubstring:(NSString * _Nonnull)text;
@end


@interface NSMutableAttributedString (SWIFT_EXTENSION(Gulliver))
- (nonnull instancetype)initWithComponents:(NSArray * _Nonnull)components;
@end


@interface NSObject (SWIFT_EXTENSION(Gulliver))
@end


@interface NSObject (SWIFT_EXTENSION(Gulliver))
@end


@interface NSObject (SWIFT_EXTENSION(Gulliver))
@end


@interface NSObject (SWIFT_EXTENSION(Gulliver))
- (void)addAsObserverForString:(NSString * _Nonnull)name selector:(SEL _Nonnull)sel object:(id _Nullable)object;
- (void)removeAsObserverForString:(NSString * _Nonnull)notificationName;
- (void)removeAsObserverFor:(NSNotificationName _Nullable)notificationName;
@end


@interface NSObject (SWIFT_EXTENSION(Gulliver))
@property (nonatomic, readonly, strong) NSBundle * _Nullable bundle;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) NSBundle * _Nullable bundle;)
+ (NSBundle * _Nullable)bundle;
@end

@class NSMutableParagraphStyle;

@interface NSParagraphStyle (SWIFT_EXTENSION(Gulliver))
+ (NSMutableParagraphStyle * _Nonnull)alignedWithAlignment:(NSTextAlignment)alignment;
@end


@interface NSOperationQueue (SWIFT_EXTENSION(Gulliver))
- (nonnull instancetype)initWithSerial:(BOOL)serial;
- (void)addOperationAndWaitWithBlock:(void (^ _Nonnull)(void))block;
@end


@interface NSProgress (SWIFT_EXTENSION(Gulliver))
@property (nonatomic) BOOL isDisplayedProgress;
@end


SWIFT_PROTOCOL("_TtP8Gulliver19ProgressDisplayable_")
@protocol ProgressDisplayable
@property (nonatomic) double fractionCompleted;
@property (nonatomic) BOOL indeterminate;
- (void)progressDisplayBegan;
- (void)progressDisplayCompleted;
@end

@protocol ProgressDisplayableView;
@class UIButton;
@class UIColor;
@class UIWindow;

SWIFT_CLASS("_TtC8Gulliver15ProgressDisplay")
@interface ProgressDisplay : UIView <ProgressDisplayable>
@property (nonatomic, copy) NSString * _Nonnull title;
@property (nonatomic, copy) NSString * _Nonnull detailText;
@property (nonatomic, strong) id <ProgressDisplayableView> _Nullable determinateView;
@property (nonatomic, strong) id <ProgressDisplayableView> _Nullable indeterminateView;
@property (nonatomic, strong) UILabel * _Null_unspecified titleLabel;
@property (nonatomic, strong) UILabel * _Null_unspecified detailLabel;
@property (nonatomic, strong) UIButton * _Nullable button;
@property (nonatomic, strong) UIColor * _Nonnull textColor;
@property (nonatomic) BOOL closeWhenComplete;
@property (nonatomic, strong) UIViewController * _Nullable presentingController;
@property (nonatomic, strong) UIView * _Nullable blockerView;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic) double fractionCompleted;
@property (nonatomic) BOOL indeterminate;
- (ProgressDisplay * _Nonnull)close:(BOOL)animated completion:(void (^ _Nullable)(void))completion;
- (void)progressDisplayBegan;
- (void)progressDisplayCompleted;
- (ProgressDisplay * _Nonnull)showIn:(UIViewController * _Nonnull)parent animated:(BOOL)animated;
- (ProgressDisplay * _Nonnull)showWithAnimated:(BOOL)animated;
- (ProgressDisplay * _Nonnull)hideWithAnimated:(BOOL)animated completion:(void (^ _Nullable)(void))completion;
- (void)update;
- (void)layoutSubviews;
@property (nonatomic, strong) UIWindow * _Nonnull backingWindow;
- (UILabel * _Nonnull)labelWithFontOfSize:(CGFloat)size text:(NSString * _Nonnull)text;
- (void)buttonTouchedWithSender:(id _Nullable)sender;
@property (nonatomic) NSInteger visibleAlertCount;
- (void)alertWillShowWithNote:(NSNotification * _Nonnull)note;
- (void)alertDidHideWithNote:(NSNotification * _Nonnull)note;
- (void)orientationChanged:(NSNotification * _Nonnull)note;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC8Gulliver35ProgressDisplayBackingGradientLayer")
@interface ProgressDisplayBackingGradientLayer : CALayer
- (void)drawInContext:(CGContextRef _Nonnull)ctx;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithLayer:(id _Nonnull)layer OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8Gulliver26ProgressDisplayBackingView")
@interface ProgressDisplayBackingView : UIView
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) Class _Nonnull layerClass;)
+ (Class _Nonnull)layerClass;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8Gulliver22ProgressDisplayManager")
@interface ProgressDisplayManager : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ProgressDisplayManager * _Nonnull defaultManager;)
+ (ProgressDisplayManager * _Nonnull)defaultManager;
@property (nonatomic, strong) NSProgress * _Nullable progress;
- (void)observeValueForKeyPath:(NSString * _Nullable)keyPath ofObject:(id _Nullable)object change:(NSDictionary<NSKeyValueChangeKey, id> * _Nullable)change context:(void * _Nullable)context;
@property (nonatomic, strong) id <ProgressDisplayable> _Nullable currentDisplay;
@property (nonatomic, copy) NSArray<id <ProgressDisplayable>> * _Nonnull displayStack;
- (void)removeDisplay:(id <ProgressDisplayable> _Nonnull)display;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_PROTOCOL("_TtP8Gulliver23ProgressDisplayableView_")
@protocol ProgressDisplayableView
@property (nonatomic) double fractionCompleted;
@property (nonatomic, readonly, strong) UIView * _Nonnull view;
@property (nonatomic, readonly) BOOL isIndeterminateDisplay;
@end


SWIFT_CLASS("_TtC8Gulliver18SA_AlertController")
@interface SA_AlertController : UIAlertController
+ (void)showNextPendingIn:(UIViewController * _Nonnull)presenter;
- (void)presentIn:(UIViewController * _Nullable)presenter;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidDisappear:(BOOL)animated;
- (void)cancelWithAnimated:(BOOL)animated completion:(void (^ _Nullable)(void))completion;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger numberOfPendingAlerts;)
+ (NSInteger)numberOfPendingAlerts;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class UIEvent;

SWIFT_CLASS("_TtC8Gulliver15SA_BlockingView")
@interface SA_BlockingView : UIView
@property (nonatomic, copy) void (^ _Nullable tappedClosure)(void);
@property (nonatomic, copy) NSArray<NSValue *> * _Nonnull excludedRects;
- (BOOL)pointInside:(CGPoint)point withEvent:(UIEvent * _Nullable)event;
- (BOOL)isPointExcluded:(CGPoint)point;
- (void)tapped;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8Gulliver28SA_MailComposeViewController")
@interface SA_MailComposeViewController : MFMailComposeViewController <MFMailComposeViewControllerDelegate>
@property (nonatomic, copy) void (^ _Nullable completion)(MFMailComposeResult);
- (nullable instancetype)initToAddress:(NSString * _Nonnull)toAddress subject:(NSString * _Nullable)subject body:(NSString * _Nullable)body completion:(void (^ _Nullable)(MFMailComposeResult))comp;
- (void)mailComposeController:(MFMailComposeViewController * _Nonnull)controller didFinishWithResult:(MFMailComposeResult)result error:(NSError * _Nullable)error;
- (nonnull instancetype)initWithNavigationBarClass:(Class _Nullable)navigationBarClass toolbarClass:(Class _Nullable)toolbarClass OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithRootViewController:(UIViewController * _Nonnull)rootViewController OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8Gulliver16SA_ManagedObject")
@interface SA_ManagedObject : NSManagedObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull entityName;)
+ (NSString * _Nonnull)entityName;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSNotificationName _Nonnull didInsertNotificationName;)
+ (NSNotificationName _Nonnull)didInsertNotificationName;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSNotificationName _Nonnull willDeleteNotificationName;)
+ (NSNotificationName _Nonnull)willDeleteNotificationName;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSNotificationName _Nonnull didDeleteNotificationName;)
+ (NSNotificationName _Nonnull)didDeleteNotificationName;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSNotificationName _Nonnull didSaveAfterInsertionNotificationName;)
+ (NSNotificationName _Nonnull)didSaveAfterInsertionNotificationName;
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8Gulliver16SA_TableViewCell")
@interface SA_TableViewCell : UITableViewCell
@property (nonatomic, strong) UIColor * _Nullable dividerColor;
@property (nonatomic, strong) UIView * _Nullable dividerView;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8Gulliver17SA_ViewController")
@interface SA_ViewController : UIViewController
- (nonnull instancetype)init;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8Gulliver18ShowErrorLogButton")
@interface ShowErrorLogButton : UIButton
@property (nonatomic) BOOL forceVisible;
- (nonnull instancetype)init;
- (void)tapped;
- (void)updateVisibility;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


@interface NSTimer (SWIFT_EXTENSION(Gulliver))
+ (NSTimer * _Nonnull)scheduledOnMainThreadWithInterval:(NSTimeInterval)interval target:(id _Nonnull)target selector:(SEL _Nonnull)selector userInfo:(id _Nullable)userInfo repeats:(BOOL)repeats;
@end


@interface UIActivityIndicatorView (SWIFT_EXTENSION(Gulliver)) <ProgressDisplayableView>
@property (nonatomic) double fractionCompleted;
@property (nonatomic, readonly, strong) UIView * _Nonnull view;
@property (nonatomic, readonly) BOOL isIndeterminateDisplay;
+ (UIActivityIndicatorView * _Nonnull)progressDisplay;
@end


@interface UIAlertController (SWIFT_EXTENSION(Gulliver))
- (nonnull instancetype)initWithTitle:(NSString * _Nonnull)title message:(NSString * _Nullable)message buttons:(NSArray<NSString *> * _Nonnull)buttons block:(void (^ _Nullable)(NSInteger))block;
@end


@interface UIBarButtonItem (SWIFT_EXTENSION(Gulliver))
- (nonnull instancetype)initWithSpacerWith:(CGFloat)spacerWith;
+ (UIBarButtonItem * _Nonnull)flexibleSpacer;
- (nonnull instancetype)initWithImage:(UIImage * _Nullable)image block:(void (^ _Nonnull)(UIBarButtonItem * _Nonnull))block;
- (nonnull instancetype)initWithTitle:(NSString * _Nullable)title block:(void (^ _Nonnull)(UIBarButtonItem * _Nonnull))block;
- (nonnull instancetype)initWithBarButtonSystemItem:(UIBarButtonSystemItem)systemItem block:(void (^ _Nonnull)(UIBarButtonItem * _Nonnull))block;
- (void)callBlock;
@end


@interface UIBezierPath (SWIFT_EXTENSION(Gulliver))
- (void)appendStringWithString:(NSAttributedString * _Nonnull)string atPoint:(CGPoint)pt withTransform:(CGAffineTransform)withTransform;
@end

@class UIFont;

@interface UIButton (SWIFT_EXTENSION(Gulliver))
@property (nonatomic, copy) NSString * _Nullable text;
@property (nonatomic, strong) UIImage * _Nullable image;
@property (nonatomic, strong) UIColor * _Nullable textColor;
@property (nonatomic, strong) UIFont * _Nullable textFont;
@end

@class UICollectionViewCell;

@interface UICollectionView (SWIFT_EXTENSION(Gulliver))
- (void)registerCellClassWithCellClass:(SWIFT_METATYPE(UICollectionViewCell) _Nonnull)cellClass;
@end

@class UINib;

@interface UICollectionViewCell (SWIFT_EXTENSION(Gulliver))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull identifier;)
+ (NSString * _Nonnull)identifier;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UINib * _Nonnull nib;)
+ (UINib * _Nonnull)nib;
@end


@interface UIColor (SWIFT_EXTENSION(Gulliver))
- (nullable instancetype)initWithHex:(NSString * _Nonnull)hex;
@property (nonatomic, readonly, copy) NSString * _Nonnull hex;
@end


@interface UIColor (SWIFT_EXTENSION(Gulliver))
@property (nonatomic, readonly) uint32_t rgba;
@property (nonatomic, readonly) uint32_t argb;
- (nonnull instancetype)initWithRgba:(uint32_t)rgba;
- (nonnull instancetype)initWithArgb:(uint32_t)argb;
+ (UIColor * _Nonnull)random;
@property (nonatomic, readonly, strong) UIColor * _Nonnull contrastingTextColor;
@end


@interface UIControl (SWIFT_EXTENSION(Gulliver))
- (void)addClosureFor:(UIControlEvents)controlEvents closure:(void (^ _Nonnull)(UIControl * _Nonnull))closure;
- (void)removeBlockForControlEvents:(UIControlEvents)forControlEvents;
- (void (^ _Nullable)(UIControl * _Nonnull))blockForEvent:(UIControlEvents)event;
- (void)fireClosureForTouchUpInsideSender:(id _Nullable)sender event:(UIEvent * _Nonnull)event;
- (void)fireClosureForTouchUpOutsideWithSender:(id _Nullable)sender event:(UIEvent * _Nonnull)event;
- (void)fireClosureForTouchDownWithSender:(id _Nullable)sender event:(UIEvent * _Nonnull)event;
@end


@interface UIDevice (SWIFT_EXTENSION(Gulliver))
@property (nonatomic, readonly) BOOL isIPad;
@end


@interface UIFont (SWIFT_EXTENSION(Gulliver))
- (CGSize)sizeOfStringWithString:(NSString * _Nonnull)string constrainedToWidth:(CGFloat)width;
@end


@interface UIImage (SWIFT_EXTENSION(Gulliver))
@property (nonatomic, readonly, copy) NSString * _Nonnull md5;
@end


@interface UIImage (SWIFT_EXTENSION(Gulliver))
- (BOOL)storeIn:(NSURL * _Nonnull)url error:(NSError * _Nullable * _Nullable)error;
- (nullable instancetype)initWithContentsOf:(NSURL * _Nonnull)url;
+ (UIImage * _Nullable)createWithSize:(CGSize)size closure:(SWIFT_NOESCAPE void (^ _Nonnull)(CGContextRef _Nonnull))closure;
- (UIImage * _Nullable)tintedImageWithTint:(UIColor * _Nonnull)tint;
- (UIImage * _Nonnull)scaledImageWithScale:(CGFloat)scale;
+ (UIImage * _Nullable)deviceLaunchImageWithOrientation:(UIDeviceOrientation)orientation;
+ (NSURL * _Nullable)deviceLaunchImageURLWithOrientation:(UIDeviceOrientation)orientation;
@property (nonatomic, readonly) BOOL hasAlpha;
@end


@interface UIImageView (SWIFT_EXTENSION(Gulliver))
+ (UIImageView * _Nullable)deviceLaunchImageViewWithOrientation:(UIInterfaceOrientation)orientation;
@end


@interface UILabel (SWIFT_EXTENSION(Gulliver))
@property (nonatomic, readonly, strong) UIFont * _Nullable actualFontInUse;
@end


@interface UINavigationController (SWIFT_EXTENSION(Gulliver))
@property (nonatomic, readonly, strong) UIViewController * _Nullable childViewControllerForStatusBarStyle;
@end


@interface UIProgressView (SWIFT_EXTENSION(Gulliver)) <ProgressDisplayableView>
@property (nonatomic) double fractionCompleted;
@property (nonatomic, readonly, strong) UIView * _Nonnull view;
@property (nonatomic, readonly) BOOL isIndeterminateDisplay;
+ (UIProgressView * _Nonnull)progressDisplay;
@end


@interface UIScrollView (SWIFT_EXTENSION(Gulliver))
@property (nonatomic) BOOL resizesForKeyboard;
- (void)setResizesForKeyboardWithResizes:(BOOL)resizes heightChanged:(void (^ _Nonnull)(CGFloat))heightChanged;
- (void)callHeightSharedWithDelta:(CGFloat)delta;
- (void)gulliver_keyboardWillShowWithNote:(NSNotification * _Nonnull)note;
- (void)gulliver_keyboardWillHideWithNote:(NSNotification * _Nonnull)note;
@end


@interface UITableView (SWIFT_EXTENSION(Gulliver))
- (void)registerWithCellClass:(SWIFT_METATYPE(UITableViewCell) _Nonnull)cellClass;
@end


@interface UITableViewCell (SWIFT_EXTENSION(Gulliver))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull identifier;)
+ (NSString * _Nonnull)identifier;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UINib * _Nonnull nib;)
+ (UINib * _Nonnull)nib;
@end


@interface UIView (SWIFT_EXTENSION(Gulliver))
- (void)setupShadowWithColor:(UIColor * _Nonnull)color radius:(CGFloat)radius offset:(CGSize)offset opacity:(float)opacity;
@end


@interface UIView (SWIFT_EXTENSION(Gulliver))
@end

@class UIViewDraggingPanGestureRecognizer;

@interface UIView (SWIFT_EXTENSION(Gulliver))
- (void)draggedViaPanGestureRecognizerWithRecog:(UIViewDraggingPanGestureRecognizer * _Nonnull)recog;
@property (nonatomic) BOOL isDraggable;
@end


@interface UIView (SWIFT_EXTENSION(Gulliver))
- (NSLayoutConstraint * _Nullable)existingConstraintFor:(NSLayoutAttribute)attr;
- (void)constrainJustifiedIn:(UIView * _Nonnull)parent priority:(UILayoutPriority)priority;
- (void)constrainWithWidth:(CGFloat)width priority:(UILayoutPriority)priority;
- (void)constrainWithHeight:(CGFloat)height priority:(UILayoutPriority)priority;
- (void)centerWithHorizontally:(BOOL)horizontally vertically:(BOOL)vertically;
- (void)constrainDimension:(NSLayoutAttribute)attribute constant:(CGFloat)constant priority:(UILayoutPriority)priority;
- (void)removeAllConstraints;
@end


@interface UIView (SWIFT_EXTENSION(Gulliver))
@property (nonatomic, readonly, strong) UIScrollView * _Nullable parentScrollView;
+ (UIView * _Nullable)viewWithNibName:(NSString * _Nullable)nibName bundle:(NSBundle * _Nullable)bundle;
@property (nonatomic, readonly) CGPoint contentCenter;
- (void)resignFirstResponderForAllSubviews;
@property (nonatomic, readonly, strong) SA_BlockingView * _Nullable blockingView;
- (void)removeBlockingViewWithDuration:(NSTimeInterval)duration completion:(void (^ _Nullable)(void))completion;
- (UIView * _Nonnull)blockingViewWithExcluding:(NSArray<NSValue *> * _Nonnull)excluding tappedClosure:(void (^ _Nullable)(void))closure;
@property (nonatomic, readonly, strong) UIViewController * _Nullable viewController;
@property (nonatomic, readonly, strong) UITableViewCell * _Nullable tableViewCell;
- (NSString * _Nonnull)hierarchy:(NSString * _Nullable)prefix;
- (BOOL)isAncestorWithView:(UIView * _Nullable)view;
@end


@interface UIView (SWIFT_EXTENSION(Gulliver))
@property (nonatomic) CGFloat x;
@property (nonatomic) CGFloat y;
@property (nonatomic) CGFloat width;
@property (nonatomic) CGFloat height;
@property (nonatomic) CGPoint origin;
@property (nonatomic) CGSize size;
@end


@interface UIViewController (SWIFT_EXTENSION(Gulliver)) <UITextFieldDelegate>
@end


@interface UIViewController (SWIFT_EXTENSION(Gulliver))
+ (UIViewController * _Nullable)fromStoryboard:(NSString * _Nullable)name bundle:(NSBundle * _Nullable)bundle;
@end


@interface UIViewController (SWIFT_EXTENSION(Gulliver))
- (void)slideInFromTheBottomFrom:(UIViewController * _Nonnull)parent offsetFromBottom:(CGFloat)offsetFromBottom dismissOnOutsideTap:(BOOL)dismissOnOutsideTap completion:(void (^ _Nullable)(void))completion;
- (void)dismissFromBarButtonItem;
- (void)dismissFromBottomSlideWithDuration:(NSTimeInterval)duration completion:(void (^ _Nullable)(void))completion;
@end

@class UITextField;

@interface UIViewController (SWIFT_EXTENSION(Gulliver))
+ (nonnull instancetype)fromXIB:(NSString * _Nullable)nibName bundle:(NSBundle * _Nullable)bundle;
+ (nonnull instancetype)controller;
- (nonnull instancetype)initWithBundle:(NSBundle * _Nullable)bundle;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nullable nibName;)
+ (NSString * _Nullable)nibName;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nullable storyboardName;)
+ (NSString * _Nullable)storyboardName;
- (UINavigationController * _Nonnull)navigationWrappedController:(BOOL)hideNavigationBar;
- (void)setTabOrder:(NSArray<UIView *> * _Nonnull)order withEndOfOrderClosure:(void (^ _Nullable)(UIViewController * _Nonnull))closure;
@property (nonatomic, readonly, copy) NSArray<UIView *> * _Nonnull tabOrder;
- (BOOL)textFieldShouldReturn:(UITextField * _Nonnull)textField;
- (BOOL)textField:(UITextField * _Nonnull)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString * _Nonnull)string;
@end


SWIFT_CLASS("_TtC8Gulliver24UIViewControllerTabOrder")
@interface UIViewControllerTabOrder : NSObject
@property (nonatomic, readonly, copy) NSArray<UIView *> * _Nonnull order;
@property (nonatomic, readonly, copy) void (^ _Nullable endOfOrderClosure)(UIViewController * _Nonnull);
- (nonnull instancetype)init:(NSArray<UIView *> * _Nonnull)views :(void (^ _Nullable)(UIViewController * _Nonnull))closure OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


@interface NSUserDefaults (SWIFT_EXTENSION(Gulliver))
+ (void)setCurrentDefaultsWithGroup:(NSString * _Nonnull)group;
+ (NSUserDefaults * _Nonnull)defaults;
+ (BOOL)hasValueForKey:(NSString * _Nonnull)key;
@end


@interface NSUserDefaults (SWIFT_EXTENSION(Gulliver))
- (BOOL)hasValueForKeyWithKey:(NSString * _Nonnull)key;
- (void)removeValueForKey:(NSString * _Nonnull)key;
@end


SWIFT_CLASS("_TtC8Gulliver13XibHostedView")
@interface XibHostedView : UIView <UITextFieldDelegate>
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSSet<NSString *> * _Nonnull loading;)
+ (NSSet<NSString *> * _Nonnull)loading;
+ (void)setLoading:(NSSet<NSString *> * _Nonnull)value;
+ (XibHostedView * _Nullable)fromXIB;
- (UIView * _Nullable)replaceFromXib;
- (id _Nullable)awakeAfterUsingCoder:(NSCoder * _Nonnull)aDecoder;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

#pragma clang diagnostic pop
